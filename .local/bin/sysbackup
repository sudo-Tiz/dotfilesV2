#!/bin/sh

# Set variables
BACKUP_DRIVE="/mnt/expansion"
CRYPTED_FILE="/mnt/expansion/crypted"
SOURCE="/"
BACKUP_DEST="/mnt/backup"
LUKS_NAME="cryptbackup"
PASSWORD="m1euXdorDDan:monp0te"

if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit
fi

# Check if Backup drive is mounted
if ! mountpoint -q "$BACKUP_DRIVE"; then
  echo "Backup drive $BACKUP_DRIVE is not mounted. Aborting."
  exit 1
fi

# Check if veracrypt file is mounted or mount it
if mountpoint -q "$BACKUP_DEST"; then
  echo "Veracrypt file is already mounted."
else
  # Mount Veracrypt volume
  veracrypt --text --keyfiles "" --pim 0 --protect-hidden no --password $PASSWORD $CRYPTED_FILE $BACKUP_DEST
  # Check if Veracrypt volume is mounted
  if ! mountpoint -q "$BACKUP_DEST"; then
    echo "Failed to mount Veracrypt file  $CRYPTED_FILE. Aborting."
    exit 1
  fi
fi

# Check if backup destination exists and is writable
if [ ! -d "$BACKUP_DEST" ] || [ ! -w "$BACKUP_DEST" ]; then
  echo "Backup destination $BACKUP_DEST does not exist or is not writable. Aborting."
  exit 1
fi

# Create incremental backup
rsync -aAX --info=progress2 --info=name0 --stats --delete --exclude={"/dev/*","/proc/*","/sys/*","/tmp/*","/var/tmp/*","/run/*","/mnt/*","/lost+found/*","/media/HDD/tiz/games/*","/swapfile","*.log","*.tmp","*.swp","*.bak","*.cache","/var/cache/*","*.thumbnails","*.old"} $SOURCE $BACKUP_DEST

RET=$?
# Notify the user  of the return of the sync command
if [ $RET -eq 0 ]; then
  echo "Backup on $BACKUP_DRIVE completed successfully."
  sudo -u tiz DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus notify-send "Backup on $BACKUP_DRIVE completed successfully."
else
  echo "Backup on $BACKUP_DRIVE failed with error code $RET."
  sudo -u tiz DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus notify-send "Backup on $BACKUP_DRIVE failed with error code $RET."
fi

# Unmount backup device
veracrypt --text --dismount $CRYPTED_FILE
